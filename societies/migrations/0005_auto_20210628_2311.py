# Generated by Django 3.0.5 on 2021-06-28 23:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('societies', '0004_auto_20210625_2213'),
    ]

    operations = [
        migrations.CreateModel(
            name='members',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_plot_id', models.IntegerField(blank=True, null=True)),
                ('membership_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('society_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('full_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('block', models.CharField(blank=True, max_length=1000, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=264, null=True)),
                ('corner', models.IntegerField(blank=True, null=True)),
                ('res_com', models.CharField(blank=True, max_length=264, null=True)),
                ('first_name', models.CharField(blank=True, max_length=264, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=264, null=True)),
                ('last_name', models.CharField(blank=True, max_length=264, null=True)),
                ('fh_type', models.CharField(blank=True, max_length=264, null=True)),
                ('fh_name', models.CharField(blank=True, max_length=264, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=264, null=True)),
                ('cnic', models.CharField(blank=True, max_length=264, null=True)),
                ('current_city', models.CharField(blank=True, max_length=264, null=True)),
                ('profession', models.CharField(blank=True, max_length=264, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('plot_price', models.FloatField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('allotment_letter', models.IntegerField(blank=True, null=True)),
                ('possession_letter', models.IntegerField(blank=True, null=True)),
                ('digitizing_letter', models.IntegerField(blank=True, null=True)),
                ('is_balloting', models.BooleanField(blank=True, null=True)),
                ('is_auction', models.BooleanField(blank=True, null=True)),
                ('is_open', models.BooleanField(blank=True, null=True)),
                ('is_proxy', models.BooleanField(blank=True, null=True)),
                ('is_imported', models.BooleanField(blank=True, null=True)),
                ('is_exemption', models.BooleanField(blank=True, null=True)),
                ('is_pgshf', models.BooleanField(blank=True, null=True)),
                ('open_date', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, max_length=1000, null=True)),
                ('last_activity', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membersSociety', to='societies.society')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membersUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'members',
            },
        ),
        migrations.CreateModel(
            name='migration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(blank=True, max_length=264, null=True)),
                ('apply_time', models.TimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='nfc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nfc_serial', models.CharField(blank=True, max_length=264, null=True)),
                ('nfc_hex', models.CharField(blank=True, max_length=264, null=True)),
                ('token', models.CharField(blank=True, max_length=264, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membersnfc', to='societies.members')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.society')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nfc',
            },
        ),
        migrations.CreateModel(
            name='plot_size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=264, null=True)),
                ('size_in_units', models.FloatField(blank=True, null=True)),
                ('plot_type', models.CharField(blank=True, max_length=264, null=True)),
                ('rate_per_unit', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('down_payment', models.FloatField(blank=True, null=True)),
                ('installment', models.FloatField(blank=True, null=True)),
                ('installment_period', models.CharField(blank=True, max_length=264, null=True)),
                ('total_installments', models.IntegerField(blank=True, null=True)),
                ('development_charges', models.FloatField(blank=True, null=True)),
                ('transfer_fees', models.FloatField(blank=True, null=True)),
                ('late_installment_surcharges', models.FloatField(blank=True, null=True)),
                ('posession_charge', models.FloatField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='societyPlotSize', to='societies.society')),
            ],
            options={
                'db_table': 'plot_size',
            },
        ),
        migrations.CreateModel(
            name='plot_size_categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=264)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'plot_size_categories',
            },
        ),
        migrations.CreateModel(
            name='plots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_number', models.IntegerField(blank=True, null=True)),
                ('street_number', models.IntegerField(blank=True, null=True)),
                ('plot_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('block_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('form_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('vide_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('dated', models.DateTimeField(blank=True, null=True)),
                ('rate_per_marla', models.FloatField(blank=True, null=True)),
                ('interest', models.FloatField(blank=True, null=True)),
                ('enhancement_cost', models.FloatField(blank=True, null=True)),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('alloted_access_area', models.CharField(blank=True, max_length=1000, null=True)),
                ('excess_area_dimension', models.FloatField(blank=True, null=True)),
                ('excess_area_memo_no', models.FloatField(blank=True, null=True)),
                ('plot_quota', models.CharField(blank=True, max_length=1000, null=True)),
                ('meta_data', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_alloted', models.BooleanField(blank=True, null=True)),
                ('is_possessed', models.BooleanField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('plot_size_category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='societyPlotSize', to='societies.plot_size_categories')),
                ('plot_size_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='societyPlotSize', to='societies.plot_size')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='societyPlot', to='societies.society')),
            ],
            options={
                'db_table': 'plots',
            },
        ),
        migrations.CreateModel(
            name='payments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('plot_no', models.CharField(blank=True, max_length=256, null=True)),
                ('street_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('block_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('plot_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('full_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('cnic', models.CharField(blank=True, max_length=1000, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('fee', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('otc_payment_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('otc_payment_token_expiry', models.FloatField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=264, null=True)),
                ('mode_of_payment', models.CharField(blank=True, max_length=264, null=True)),
                ('status', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membersPayments', to='societies.members')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.society')),
                ('zone_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.zones')),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='nominee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnic', models.CharField(blank=True, max_length=1000, null=True)),
                ('full_name', models.CharField(blank=True, max_length=264, null=True)),
                ('first_name', models.CharField(blank=True, max_length=264, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=264, null=True)),
                ('last_name', models.CharField(blank=True, max_length=264, null=True)),
                ('relation', models.CharField(blank=True, max_length=264, null=True)),
                ('fh_name', models.CharField(blank=True, max_length=264, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=264, null=True)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=264, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membersNominee', to='societies.members')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.society')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nominee',
            },
        ),
        migrations.CreateModel(
            name='nfc_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.CharField(blank=True, max_length=264, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='membersnfclog', to='societies.members')),
                ('nfc_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nfcLog', to='societies.nfc')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.society')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nfc_log',
            },
        ),
        migrations.CreateModel(
            name='member_plots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_no', models.IntegerField(blank=True, null=True)),
                ('remaining_amount', models.FloatField(blank=True, null=True)),
                ('next_due_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Members', to='societies.members')),
                ('plot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Plots', to='societies.plots')),
            ],
            options={
                'db_table': 'member_plots',
            },
        ),
        migrations.CreateModel(
            name='member_meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_key', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberMeta', to='societies.members')),
            ],
            options={
                'db_table': 'member_meta',
            },
        ),
        migrations.CreateModel(
            name='member_employee_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(blank=True, max_length=264, null=True)),
                ('monthly_income', models.IntegerField(blank=True, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('service_duration', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberEmployee', to='societies.members')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberemployeeSociety', to='societies.society')),
            ],
            options={
                'db_table': 'nmember_employee_info',
            },
        ),
        migrations.CreateModel(
            name='member_activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(blank=True, max_length=10000, null=True)),
                ('activity_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberActivity', to='societies.members')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userActivity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'member_activity',
            },
        ),
        migrations.CreateModel(
            name='letters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=264, null=True)),
                ('vars', models.CharField(blank=True, max_length=264, null=True)),
                ('heading', models.CharField(blank=True, max_length=264, null=True)),
                ('body', models.CharField(blank=True, max_length=264, null=True)),
                ('issue_date', models.DateTimeField(blank=True, null=True)),
                ('sms_code', models.CharField(blank=True, max_length=10000, null=True)),
                ('sms_code_hash', models.CharField(blank=True, max_length=10000, null=True)),
                ('president_barcode_hash', models.CharField(blank=True, max_length=10000, null=True)),
                ('gs_barcode', models.CharField(blank=True, max_length=10000, null=True)),
                ('gs_barcode_hash', models.CharField(blank=True, max_length=10000, null=True)),
                ('qr_barcode', models.CharField(blank=True, max_length=10000, null=True)),
                ('qr_barcode_hash', models.CharField(blank=True, max_length=10000, null=True)),
                ('rfid_code', models.CharField(blank=True, max_length=10000, null=True)),
                ('rfid_code_hash', models.CharField(blank=True, max_length=10000, null=True)),
                ('is_printed', models.BooleanField(blank=True, null=True)),
                ('print_count', models.IntegerField(blank=True, null=True)),
                ('printing_date', models.DateTimeField(blank=True, null=True)),
                ('printed_by', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MembersLetters', to='societies.members')),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='letters', to='societies.society')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lettersUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'letters',
            },
        ),
        migrations.CreateModel(
            name='contacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.IntegerField(blank=True, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('address_type', models.CharField(blank=True, max_length=264, null=True)),
                ('model', models.CharField(blank=True, max_length=264, null=True)),
                ('contact', models.CharField(blank=True, max_length=264, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('society_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='societies.society')),
            ],
            options={
                'db_table': 'contacts',
            },
        ),
        migrations.AddField(
            model_name='sms_log',
            name='letter_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.letters'),
        ),
        migrations.AddField(
            model_name='sms_log',
            name='member_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='societies.members'),
        ),
    ]
